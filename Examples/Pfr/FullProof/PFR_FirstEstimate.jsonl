{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n","proof":":= d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/","declId":"PFR.FirstEstimate.4_0.FuH4gOrXOOC8Blk","decl":"/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n","proof":":= d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]","declId":"PFR.FirstEstimate.43_0.FuH4gOrXOOC8Blk","decl":"/-- `k "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n","proof":":= I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']","declId":"PFR.FirstEstimate.46_0.FuH4gOrXOOC8Blk","decl":"/-- `I₁ "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n","proof":":= by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring","declId":"PFR.FirstEstimate.50_0.FuH4gOrXOOC8Blk","decl":"/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n","proof":":=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')","declId":"PFR.FirstEstimate.72_0.FuH4gOrXOOC8Blk","decl":"/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n","proof":":=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)","declId":"PFR.FirstEstimate.80_0.FuH4gOrXOOC8Blk","decl":"/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n","proof":":= by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq","declId":"PFR.FirstEstimate.89_0.FuH4gOrXOOC8Blk","decl":"/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq\n\n","proof":":= by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas2 hX₂ hX₁' h using 4\n  · rw [rdist_symm]\n    exact (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁\n  · exact h₁.entropy_eq","declId":"PFR.FirstEstimate.97_0.FuH4gOrXOOC8Blk","decl":"/-- $$ d[X^0_2;X_2+\\tilde X_1] - d[X^0_2; X_2] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_2 : d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₁]/4 - H[X₂]/4 "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq\n\n/-- $$ d[X^0_2;X_2+\\tilde X_1] - d[X^0_2; X_2] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_2 : d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas2 hX₂ hX₁' h using 4\n  · rw [rdist_symm]\n    exact (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁\n  · exact h₁.entropy_eq\n\n","proof":":= by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas1 hX₁ hX₂' h using 3\n  · rw [(IdentDistrib.refl hX₁.aemeasurable).rdist_eq h₂]\n  · apply h₂.entropy_eq","declId":"PFR.FirstEstimate.106_0.FuH4gOrXOOC8Blk","decl":"/-- $$ d[X_1^0;X_1|X_1+\\tilde X_2] - d[X_1^0;X_1] \\leq\n    \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_3 : d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₁]/4 - H[X₂]/4 "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq\n\n/-- $$ d[X^0_2;X_2+\\tilde X_1] - d[X^0_2; X_2] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_2 : d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas2 hX₂ hX₁' h using 4\n  · rw [rdist_symm]\n    exact (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁\n  · exact h₁.entropy_eq\n\n/-- $$ d[X_1^0;X_1|X_1+\\tilde X_2] - d[X_1^0;X_1] \\leq\n    \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_3 : d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas1 hX₁ hX₂' h using 3\n  · rw [(IdentDistrib.refl hX₁.aemeasurable).rdist_eq h₂]\n  · apply h₂.entropy_eq\n\n","proof":":= by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas2 hX₂ hX₁' h using 3\n  · rw [rdist_symm, (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁]\n  · apply h₁.entropy_eq","declId":"PFR.FirstEstimate.115_0.FuH4gOrXOOC8Blk","decl":"/-- $$ d[X_2^0; X_2|X_2+\\tilde X_1] - d[X_2^0; X_2] \\leq\n    \\tfrac{1}{2}k + \\tfrac{1}{4} \\mathbb{H}[X_2] - \\tfrac{1}{4} \\mathbb{H}[X_1].$$ -/\nlemma diff_rdist_le_4 : d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₂]/4 - H[X₁]/4 "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq\n\n/-- $$ d[X^0_2;X_2+\\tilde X_1] - d[X^0_2; X_2] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_2 : d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas2 hX₂ hX₁' h using 4\n  · rw [rdist_symm]\n    exact (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁\n  · exact h₁.entropy_eq\n\n/-- $$ d[X_1^0;X_1|X_1+\\tilde X_2] - d[X_1^0;X_1] \\leq\n    \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_3 : d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas1 hX₁ hX₂' h using 3\n  · rw [(IdentDistrib.refl hX₁.aemeasurable).rdist_eq h₂]\n  · apply h₂.entropy_eq\n\n/-- $$ d[X_2^0; X_2|X_2+\\tilde X_1] - d[X_2^0; X_2] \\leq\n    \\tfrac{1}{2}k + \\tfrac{1}{4} \\mathbb{H}[X_2] - \\tfrac{1}{4} \\mathbb{H}[X_1].$$ -/\nlemma diff_rdist_le_4 : d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas2 hX₂ hX₁' h using 3\n  · rw [rdist_symm, (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁]\n  · apply h₁.entropy_eq\n\n","proof":":= by\n  have v1 := rdist_add_rdist_add_condMutual_eq X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_› ‹_› ‹_› ‹_›\n  have v2 := rdist_of_sums_ge p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_› ‹_›\n  have v3 := condRuzsaDist_of_sums_ge p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› (by measurability) (by measurability)\n  have v4 := (mul_le_mul_left p.hη).2 (diff_rdist_le_1 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v5 := (mul_le_mul_left p.hη).2 (diff_rdist_le_2 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v6 := (mul_le_mul_left p.hη).2 (diff_rdist_le_3 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v7 := (mul_le_mul_left p.hη).2 (diff_rdist_le_4 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  simp only [inv_eq_one_div] at *\n  linarith [v1, v2, v3, v4, v5, v6, v7]","declId":"PFR.FirstEstimate.124_0.FuH4gOrXOOC8Blk","decl":"/-- We have $I_1 \\leq 2 \\eta k$ -/\nlemma first_estimate : I₁ ≤ 2 * p.η * k "}
{"srcUpToDecl":"import PFR.Fibring\nimport PFR.TauFunctional\n\n/-!\n# First estimate\n\nThe first estimate on tau-minimizers.\n\nAssumptions:\n\n* $X_1, X_2$ are tau-minimizers\n* $X_1, X_2, \\tilde X_1, \\tilde X_2$ are independent random variables, with $X_1,\\tilde X_1$ copies of $X_1$ and $X_2,\\tilde X_2$ copies of $X_2$.\n* $k := d[X_1;X_2]$\n* $I_1 := I [X_1+X_2 : \\tilde X_1 + X_2 | X_1+X_2+\\tilde X_1+\\tilde X_2]$\n\n## Main results\n\n* `first_estimate` : $I_1 ≤ 2 η k$\n* `ent_ofsum_le` : $H[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} H[X_1]+\\tfrac{1}{2} H[X_2] + (2 + \\eta) k - I_1.$\n-/\n\nopen MeasureTheory ProbabilityTheory\n\nvariable {G : Type*} [addgroup: AddCommGroup G] [Fintype G] [hG : MeasurableSpace G]\n  [MeasurableSingletonClass G] [elem: ElementaryAddCommGroup G 2] [MeasurableAdd₂ G]\n\nvariable {Ω₀₁ Ω₀₂ : Type*} [MeasureSpace Ω₀₁] [MeasureSpace Ω₀₂]\n  [IsProbabilityMeasure (ℙ : Measure Ω₀₁)] [IsProbabilityMeasure (ℙ : Measure Ω₀₂)]\n\nvariable (p : refPackage Ω₀₁ Ω₀₂ G)\n\nvariable {Ω : Type*} [MeasureSpace Ω] [IsProbabilityMeasure (ℙ : Measure Ω)]\n\nvariable (X₁ X₂ X₁' X₂' : Ω → G)\n  (hX₁ : Measurable X₁) (hX₂ : Measurable X₂) (hX₁' : Measurable X₁') (hX₂' : Measurable X₂')\n\nvariable (h₁ : IdentDistrib X₁ X₁') (h₂ : IdentDistrib X₂ X₂')\n\nvariable (h_indep : iIndepFun (fun _i => hG) ![X₁, X₂, X₂', X₁'])\n\nvariable (h_min: tau_minimizes p X₁ X₂)\n\n/-- `k := d[X₁ # X₂]`, the Ruzsa distance `rdist` between X₁ and X₂. -/\nlocal notation3 \"k\" => d[X₁ # X₂]\n\n/-- `I₁ := I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']`, the conditional mutual information\nof `X₁ + X₂` and `X₁' + X₂` given the quadruple sum `X₁ + X₂ + X₁' + X₂'`. -/\nlocal notation3 \"I₁\" => I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂']\n\n/-- The sum of\n$$ d[X_1+\\tilde X_2;X_2+\\tilde X_1] + d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1] $$\nand\n$$ I[X_1+ X_2 : \\tilde X_1 + X_2 \\,|\\, X_1 + X_2 + \\tilde X_1 + \\tilde X_2] $$\nis equal to $2k$. -/\nlemma rdist_add_rdist_add_condMutual_eq : d[X₁ + X₂' # X₂ + X₁'] + d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n    + I[X₁ + X₂ : X₁' + X₂ | X₁ + X₂ + X₁' + X₂'] = 2 * k := by\n  have h0 : ![X₁, X₂, X₂', X₁'] 0 = X₁ := rfl\n  have h1 : ![X₁, X₂, X₂', X₁'] 1 = X₂ := rfl\n  have h2 : ![X₁, X₂, X₂', X₁'] 2 = X₂' := rfl\n  have h3 : ![X₁, X₂, X₂', X₁'] 3 = X₁' := rfl\n  have h := sum_of_rdist_eq_char_2 ![X₁, X₂, X₂', X₁'] h_indep\n    (fun i => by fin_cases i <;> assumption)\n  rw [h0, h1, h2, h3] at h\n  have heq : d[X₂' # X₁'] = k := by\n    rw [rdist_symm]\n    apply ProbabilityTheory.IdentDistrib.rdist_eq h₁.symm h₂.symm\n  rw [heq] at h\n  convert h.symm using 1\n  · congr 2 <;> abel\n  · ring\n\n/-- The distance $d[X_1+\\tilde X_2; X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1]) - \\eta (d[X^0_2; X_2+\\tilde X_1] - d[X^0_2; X_2]).$$ -/\nlemma rdist_of_sums_ge :\n    d[X₁ + X₂' # X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  distance_ge_of_min _ h_min (hX₁.add hX₂') (hX₂.add hX₁')\n\n/-- The distance $d[X_1|X_1+\\tilde X_2; X_2|X_2+\\tilde X_1]$ is at least\n$$ k - \\eta (d[X^0_1; X_1 | X_1 + \\tilde X_2] - d[X^0_1; X_1]) - \\eta(d[X^0_2; X_2 | X_2 + \\tilde X_1] - d[X^0_2; X_2]).$$\n-/\nlemma condRuzsaDist_of_sums_ge :\n    d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁'] ≥\n      k - p.η * (d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁])\n        - p.η * (d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂]) :=\n  condRuzsaDistance_ge_of_min _ h_min hX₁ hX₂ _ _ (by measurability) (by measurability)\n\n/-- $$d[X^0_1; X_1+\\tilde X_2] - d[X^0_1; X_1] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\bbH[X_2] - \\tfrac{1}{4} \\bbH[X_1].$$ -/\nlemma diff_rdist_le_1 : d[p.X₀₁ # X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas1 hX₁ hX₂' h using 4\n  · exact ProbabilityTheory.IdentDistrib.rdist_eq (IdentDistrib.refl hX₁.aemeasurable) h₂\n  · exact h₂.entropy_eq\n\n/-- $$ d[X^0_2;X_2+\\tilde X_1] - d[X^0_2; X_2] \\leq \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_2 : d[p.X₀₂ # X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le' ℙ p.hmeas2 hX₂ hX₁' h using 4\n  · rw [rdist_symm]\n    exact (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁\n  · exact h₁.entropy_eq\n\n/-- $$ d[X_1^0;X_1|X_1+\\tilde X_2] - d[X_1^0;X_1] \\leq\n    \\tfrac{1}{2} k + \\tfrac{1}{4} \\mathbb{H}[X_1] - \\tfrac{1}{4} \\mathbb{H}[X_2].$$ -/\nlemma diff_rdist_le_3 : d[p.X₀₁ # X₁ | X₁ + X₂'] - d[p.X₀₁ # X₁] ≤ k/2 + H[X₁]/4 - H[X₂]/4 := by\n  have h : IndepFun X₁ X₂'\n  · simpa using h_indep.indepFun (show (0:Fin 4) ≠ 2 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas1 hX₁ hX₂' h using 3\n  · rw [(IdentDistrib.refl hX₁.aemeasurable).rdist_eq h₂]\n  · apply h₂.entropy_eq\n\n/-- $$ d[X_2^0; X_2|X_2+\\tilde X_1] - d[X_2^0; X_2] \\leq\n    \\tfrac{1}{2}k + \\tfrac{1}{4} \\mathbb{H}[X_2] - \\tfrac{1}{4} \\mathbb{H}[X_1].$$ -/\nlemma diff_rdist_le_4 : d[p.X₀₂ # X₂ | X₂ + X₁'] - d[p.X₀₂ # X₂] ≤ k/2 + H[X₂]/4 - H[X₁]/4 := by\n  have h : IndepFun X₂ X₁'\n  · simpa using h_indep.indepFun (show (1:Fin 4) ≠ 3 by decide)\n  convert condRuzsaDist_diff_le''' ℙ p.hmeas2 hX₂ hX₁' h using 3\n  · rw [rdist_symm, (IdentDistrib.refl hX₂.aemeasurable).rdist_eq h₁]\n  · apply h₁.entropy_eq\n\n/-- We have $I_1 \\leq 2 \\eta k$ -/\nlemma first_estimate : I₁ ≤ 2 * p.η * k := by\n  have v1 := rdist_add_rdist_add_condMutual_eq X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_› ‹_› ‹_› ‹_›\n  have v2 := rdist_of_sums_ge p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_› ‹_›\n  have v3 := condRuzsaDist_of_sums_ge p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› (by measurability) (by measurability)\n  have v4 := (mul_le_mul_left p.hη).2 (diff_rdist_le_1 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v5 := (mul_le_mul_left p.hη).2 (diff_rdist_le_2 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v6 := (mul_le_mul_left p.hη).2 (diff_rdist_le_3 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  have v7 := (mul_le_mul_left p.hη).2 (diff_rdist_le_4 p X₁ X₂ X₁' X₂' ‹_› ‹_› ‹_› ‹_›)\n  simp only [inv_eq_one_div] at *\n  linarith [v1, v2, v3, v4, v5, v6, v7]\n\n","proof":":= by\n  let D := d[X₁ + X₂' # X₂ + X₁']\n  let Dcc := d[X₁ | X₁ + X₂' # X₂ | X₂ + X₁']\n  let D1 := d[p.X₀₁ # X₁]\n  let Dc1 := d[p.X₀₁ # X₁ | X₁ + X₂']\n  let D2 := d[p.X₀₂ # X₂]\n  let Dc2 := d[p.X₀₂ # X₂ | X₂ + X₁']\n  have lem68 : D + Dcc + I₁ = 2 * k :=\n    rdist_add_rdist_add_condMutual_eq _ _ _ _ hX₁ hX₂ hX₁' hX₂' h₁ h₂ h_indep\n  have lem610 : Dcc ≥ k - p.η * (Dc1 - D1) - p.η * (Dc2 - D2) :=\n    condRuzsaDist_of_sums_ge p X₁ X₂ X₁' X₂' hX₁ hX₂ (by measurability) (by measurability) h_min\n  have lem611c : Dc1 - D1 ≤ k / 2 + H[X₁] / 4 - H[X₂] / 4 :=\n    diff_rdist_le_3 p X₁ X₂ X₁' X₂' hX₁ hX₂' h₂ h_indep\n  have lem611d : Dc2 - D2 ≤ k / 2 + H[X₂] / 4 - H[X₁] / 4 :=\n    diff_rdist_le_4 p X₁ X₂ X₁' X₂' hX₂ hX₁' h₁ h_indep\n  have aux : D + I₁ ≤ (1 + p.η) * k := by\n    calc D + I₁\n       ≤ k + p.η * (Dc1 - D1) + p.η * (Dc2 - D2)                                         := ?_\n     _ ≤ k + p.η * (k / 2 + H[X₁] / 4 - H[X₂] / 4) + p.η * (k / 2 + H[X₂] / 4 - H[X₁] / 4)  := ?_\n     _ = (1 + p.η) * k                                                                    := by ring\n    · convert add_le_add lem68.le (neg_le_neg lem610) using 1 <;> ring\n    · refine add_le_add (add_le_add (le_refl _) ?_) ?_\n      · apply (mul_le_mul_left p.hη).mpr lem611c\n      · apply (mul_le_mul_left p.hη).mpr lem611d\n  have ent_sub_eq_ent_add : H[X₁ + X₂' - (X₂ + X₁')] = H[X₁ + X₂' + (X₂ + X₁')] := by simp\n  have rw₁ : X₁ + X₂' + (X₂ + X₁') = X₁ + X₂ + X₁' + X₂' := by abel\n  have ind_aux : IndepFun (X₁ + X₂') (X₂ + X₁') := by\n    exact iIndepFun.indepFun_add_add h_indep (fun i ↦ by fin_cases i <;> assumption) 0 2 1 3\n      (by decide) (by decide) (by decide) (by decide)\n  have ind : D = H[X₁ + X₂' - (X₂ + X₁')] - H[X₁ + X₂'] / 2 - H[X₂ + X₁'] / 2 :=\n    @IndepFun.rdist_eq Ω G _ ℙ _ _ _ (X₁ + X₂') _ (X₂ + X₁') ind_aux (by measurability) (by measurability)\n  rw [ind, ent_sub_eq_ent_add, rw₁] at aux\n  have obs : H[X₁ + X₂ + X₁' + X₂'] ≤ H[X₁ + X₂'] / 2 + H[X₂ + X₁'] / 2 + (1 + p.η) * k - I₁ := by\n    linarith\n  have rw₂ : H[X₁ + X₂'] = k + H[X₁]/2 + H[X₂]/2 := by\n    have HX₂_eq : H[X₂] = H[X₂'] :=\n      congr_arg (fun (μ : Measure G) ↦ measureEntropy (μ := μ)) h₂.map_eq\n    have k_eq : k = H[X₁ - X₂'] - H[X₁] / 2 - H[X₂'] / 2 := by\n      have k_eq_aux : k = d[X₁ # X₂'] := (IdentDistrib.refl hX₁.aemeasurable).rdist_eq h₂\n      rw [k_eq_aux]\n      exact (h_indep.indepFun (show (0 : Fin 4) ≠ 2 by decide)).rdist_eq hX₁ hX₂'\n    rw [k_eq, ← ElementaryAddCommGroup.sub_eq_add, ← HX₂_eq]\n    ring\n  have rw₃ : H[X₂ + X₁'] = k + H[X₁]/2 + H[X₂]/2 := by\n    have HX₁_eq : H[X₁] = H[X₁'] :=\n      congr_arg (fun (μ : Measure G) ↦ measureEntropy (μ := μ)) h₁.map_eq\n    have k_eq' : k = H[X₁' - X₂] - H[X₁'] / 2 - H[X₂] / 2 := by\n      have k_eq_aux : k = d[X₁' # X₂] :=\n        IdentDistrib.rdist_eq h₁ (IdentDistrib.refl hX₂.aemeasurable)\n      rw [k_eq_aux]\n      exact IndepFun.rdist_eq (h_indep.indepFun (show (3 : Fin 4) ≠ 1 by decide)) hX₁' hX₂\n    rw [add_comm X₂ X₁', k_eq', ← ElementaryAddCommGroup.sub_eq_add, ← HX₁_eq]\n    ring\n  calc H[X₁ + X₂ + X₁' + X₂']\n      ≤ H[X₁ + X₂'] / 2 + H[X₂ + X₁'] / 2 + (1 + p.η) * k - I₁    := obs\n    _ = (k + H[X₁] / 2 + H[X₂] / 2) / 2\n        + (k + H[X₁] / 2 + H[X₂] / 2) / 2 + (1 + p.η) * k - I₁    := by rw [rw₂, rw₃]\n    _ = H[X₁] / 2 + H[X₂] / 2 + (2 + p.η) * k - I₁                := by ring","declId":"PFR.FirstEstimate.136_0.FuH4gOrXOOC8Blk","decl":"/--\n$$\\mathbb{H}[X_1+X_2+\\tilde X_1+\\tilde X_2] \\le \\tfrac{1}{2} \\mathbb{H}[X_1]+\\tfrac{1}{2} \\mathbb{H}[X_2] + (2 + \\eta) k - I_1.$$\n-/\nlemma ent_ofsum_le : H[X₁ + X₂ + X₁' + X₂'] ≤ H[X₁]/2 + H[X₂]/2 + (2+p.η)*k - I₁ "}
