{"srcUpToDecl":"import Mathlib.Probability.Independence.Kernel\n\nopen MeasureTheory\n\nnamespace ProbabilityTheory.kernel\nvariable {β β' γ γ' : Type*} {_mα : MeasurableSpace α} {_mΩ : MeasurableSpace Ω}\n  {κ : kernel α Ω} {μ : Measure α} {f : Ω → β} {g : Ω → β'}\n\n\n","proof":":= by\n  rintro _ _ ⟨A, hA, rfl⟩ ⟨B, hB, rfl⟩\n  filter_upwards [hf, hg, hfg _ _ ⟨_, hA, rfl⟩ ⟨_, hB, rfl⟩] with a hf' hg' hfg'\n  have h1 : f ⁻¹' A =ᵐ[κ a] f' ⁻¹' A := hf'.fun_comp A\n  have h2 : g ⁻¹' B =ᵐ[κ a] g' ⁻¹' B := hg'.fun_comp B\n  rwa [← measure_congr h1, ← measure_congr h2, ← measure_congr (h1.inter h2)]","declId":"PFR.Mathlib.Probability.Independence.Kernel.10_0.2EuJ0zbyzLPiU1d","decl":"/-- in mathlib as of `4d385393cd569f08ac30425ef886a57bb10daaa5` (TODO: bump) -/\ntheorem IndepFun.ae_eq' {mβ : MeasurableSpace β} {mβ' : MeasurableSpace β'} {f f' : Ω → β}\n    {g g' : Ω → β'} (hfg : IndepFun f g κ μ) (hf : ∀ᵐ a ∂μ, f =ᵐ[κ a] f')\n    (hg : ∀ᵐ a ∂μ, g =ᵐ[κ a] g') : IndepFun f' g' κ μ "}
