{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n","proof":":= simp, norm_cast)]\nlemma coe_mul_coe (H : S) : H * H = (H : Set G) := by aesop (add simp mem_mul)","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.12_0.kDRjFGNecW1qezu","decl":"@[to_additive (attr "}
{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n@[","proof":":= simp, norm_cast)","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.12_2.kDRjFGNecW1qezu","decl":"to_additive (attr "}
{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)]\nlemma coe_mul_coe (H : S) : H * H = (H : Set G) := by aesop (add simp mem_mul)\n\nend DivInvMonoid\n\nsection DivisionMonoid\nvariable [DivisionMonoid G] [SubgroupClass S G]\n\n","proof":":= simp, norm_cast)] lemma inv_coe (H : S) : (H : Set G)⁻¹ = H := by aesop","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.20_0.kDRjFGNecW1qezu","decl":"@[to_additive (attr "}
{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)]\nlemma coe_mul_coe (H : S) : H * H = (H : Set G) := by aesop (add simp mem_mul)\n\nend DivInvMonoid\n\nsection DivisionMonoid\nvariable [DivisionMonoid G] [SubgroupClass S G]\n\n@[","proof":":= simp, norm_cast)","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.20_2.kDRjFGNecW1qezu","decl":"to_additive (attr "}
{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)]\nlemma coe_mul_coe (H : S) : H * H = (H : Set G) := by aesop (add simp mem_mul)\n\nend DivInvMonoid\n\nsection DivisionMonoid\nvariable [DivisionMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)] lemma inv_coe (H : S) : (H : Set G)⁻¹ = H := by aesop\n\n","proof":":= simp, norm_cast)]\nlemma coe_div_coe (H : S) : H / H = (H : Set G) := by simp [div_eq_mul_inv]","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.22_0.kDRjFGNecW1qezu","decl":"@[to_additive (attr "}
{"srcUpToDecl":"import Mathlib.GroupTheory.Subgroup.Pointwise\n\nopen Set\nopen scoped Pointwise\n\nnamespace SubgroupClass\nvariable {S G : Type*} [SetLike S G]\n\nsection DivInvMonoid\nvariable [DivInvMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)]\nlemma coe_mul_coe (H : S) : H * H = (H : Set G) := by aesop (add simp mem_mul)\n\nend DivInvMonoid\n\nsection DivisionMonoid\nvariable [DivisionMonoid G] [SubgroupClass S G]\n\n@[to_additive (attr := simp, norm_cast)] lemma inv_coe (H : S) : (H : Set G)⁻¹ = H := by aesop\n\n@[","proof":":= simp, norm_cast)","declId":"PFR.Mathlib.GroupTheory.Subgroup.Pointwise.22_2.kDRjFGNecW1qezu","decl":"to_additive (attr "}
