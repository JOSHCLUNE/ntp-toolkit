{"srcUpToDecl":"import Mathlib.MeasureTheory.Integral.SetIntegral\nimport PFR.Mathlib.MeasureTheory.Integral.Bochner\n\nopen scoped BigOperators ENNReal\n\nnamespace MeasureTheory\nvariable {α E : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [NormedAddCommGroup E]\n  [NormedSpace ℝ E] [CompleteSpace E]\n\n","proof":":= by\n  refine integral_finset _ _ $ IntegrableOn.integrable ?_\n  observe : s = ⋃ x ∈ s, {x}\n  simp [this, integrableOn_finset_iUnion, measure_lt_top]","declId":"PFR.Mathlib.MeasureTheory.Integral.SetIntegral.10_0.sIYKnM9dxtAihBi","decl":"lemma setIntegral_eq_sum (μ : Measure α) [IsFiniteMeasure μ] (s : Finset α) (f : α → E) :\n    ∫ x in s, f x ∂μ = ∑ x in s, (μ {x}).toReal • f x "}
{"srcUpToDecl":"import Mathlib.MeasureTheory.Integral.SetIntegral\nimport PFR.Mathlib.MeasureTheory.Integral.Bochner\n\nopen scoped BigOperators ENNReal\n\nnamespace MeasureTheory\nvariable {α E : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [NormedAddCommGroup E]\n  [NormedSpace ℝ E] [CompleteSpace E]\n\nlemma setIntegral_eq_sum (μ : Measure α) [IsFiniteMeasure μ] (s : Finset α) (f : α → E) :\n    ∫ x in s, f x ∂μ = ∑ x in s, (μ {x}).toReal • f x := by\n  refine integral_finset _ _ $ IntegrableOn.integrable ?_\n  observe : s = ⋃ x ∈ s, {x}\n  simp [this, integrableOn_finset_iUnion, measure_lt_top]\n\n","proof":":= by\n  have hA' : (s : Set α) =ᵐ[μ] Set.univ := by rwa [MeasureTheory.ae_eq_univ]\n  rw [← integral_univ, ← set_integral_congr_set_ae hA']\n  exact setIntegral_eq_sum μ s f","declId":"PFR.Mathlib.MeasureTheory.Integral.SetIntegral.16_0.sIYKnM9dxtAihBi","decl":"lemma integral_eq_sum' (μ : Measure α) [IsFiniteMeasure μ] {s : Finset α} (hs : μ sᶜ = 0)\n    (f : α → E) : ∫ x, f x ∂μ = ∑ x in s, (μ {x}).toReal • f x "}
