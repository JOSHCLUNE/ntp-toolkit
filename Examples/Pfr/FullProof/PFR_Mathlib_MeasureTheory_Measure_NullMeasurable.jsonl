{"srcUpToDecl":"import Mathlib.MeasureTheory.MeasurableSpace.Basic\nimport Mathlib.MeasureTheory.Measure.NullMeasurable\n\nopen scoped BigOperators\n\nnamespace MeasureTheory\nvariable {α β : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [MeasurableSpace β]\n  [MeasurableSingletonClass β]\n\n","proof":":= by\n  have : Prod.fst ⁻¹' {x} = ⋃ y : β, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]","declId":"PFR.Mathlib.MeasureTheory.Measure.NullMeasurable.10_0.XHBtxMQMSTVBIDh","decl":"lemma measure_preimage_fst_singleton_eq_sum_countable [Countable β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑' y, μ {(x, y)} "}
{"srcUpToDecl":"import Mathlib.MeasureTheory.MeasurableSpace.Basic\nimport Mathlib.MeasureTheory.Measure.NullMeasurable\n\nopen scoped BigOperators\n\nnamespace MeasureTheory\nvariable {α β : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [MeasurableSpace β]\n  [MeasurableSingletonClass β]\n\nlemma measure_preimage_fst_singleton_eq_sum_countable [Countable β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑' y, μ {(x, y)} := by\n  have : Prod.fst ⁻¹' {x} = ⋃ y : β, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\n","proof":":= by\n  have : Prod.snd ⁻¹' {y} = ⋃ x : α, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]","declId":"PFR.Mathlib.MeasureTheory.Measure.NullMeasurable.15_0.XHBtxMQMSTVBIDh","decl":"lemma measure_preimage_snd_singleton_eq_sum_countable [Countable α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑' x, μ {(x, y)} "}
{"srcUpToDecl":"import Mathlib.MeasureTheory.MeasurableSpace.Basic\nimport Mathlib.MeasureTheory.Measure.NullMeasurable\n\nopen scoped BigOperators\n\nnamespace MeasureTheory\nvariable {α β : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [MeasurableSpace β]\n  [MeasurableSingletonClass β]\n\nlemma measure_preimage_fst_singleton_eq_sum_countable [Countable β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑' y, μ {(x, y)} := by\n  have : Prod.fst ⁻¹' {x} = ⋃ y : β, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\nlemma measure_preimage_snd_singleton_eq_sum_countable [Countable α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑' x, μ {(x, y)} := by\n  have : Prod.snd ⁻¹' {y} = ⋃ x : α, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\n","proof":":= by\n  rw [measure_preimage_fst_singleton_eq_sum_countable μ x, tsum_eq_sum]\n  simp","declId":"PFR.Mathlib.MeasureTheory.Measure.NullMeasurable.20_0.XHBtxMQMSTVBIDh","decl":"lemma measure_preimage_fst_singleton_eq_sum [Fintype β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑ y, μ {(x, y)} "}
{"srcUpToDecl":"import Mathlib.MeasureTheory.MeasurableSpace.Basic\nimport Mathlib.MeasureTheory.Measure.NullMeasurable\n\nopen scoped BigOperators\n\nnamespace MeasureTheory\nvariable {α β : Type*} [MeasurableSpace α] [MeasurableSingletonClass α] [MeasurableSpace β]\n  [MeasurableSingletonClass β]\n\nlemma measure_preimage_fst_singleton_eq_sum_countable [Countable β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑' y, μ {(x, y)} := by\n  have : Prod.fst ⁻¹' {x} = ⋃ y : β, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\nlemma measure_preimage_snd_singleton_eq_sum_countable [Countable α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑' x, μ {(x, y)} := by\n  have : Prod.snd ⁻¹' {y} = ⋃ x : α, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\nlemma measure_preimage_fst_singleton_eq_sum [Fintype β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑ y, μ {(x, y)} := by\n  rw [measure_preimage_fst_singleton_eq_sum_countable μ x, tsum_eq_sum]\n  simp\n\n","proof":":= by\n  rw [measure_preimage_snd_singleton_eq_sum_countable μ y, tsum_eq_sum]\n  simp","declId":"PFR.Mathlib.MeasureTheory.Measure.NullMeasurable.25_0.XHBtxMQMSTVBIDh","decl":"lemma measure_preimage_snd_singleton_eq_sum [Fintype α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑ x, μ {(x, y)} "}
